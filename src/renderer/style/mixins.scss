@mixin overflowScroll() {
  overflow: hidden;
  overflow-y: auto;
  --webkit-overflow-scrolling: touch;
}

@mixin customScrollBar() {
  &::-webkit-scrollbar {
    width: 14px;
  }

  &::-webkit-scrollbar-thumb {
    box-shadow: inset 0 0 14px 14px $color-neutral-normal;
    border: solid 4px transparent;
    border-radius: 14px;
  }

  &::-webkit-scrollbar-track {
    box-shadow: inset 0 0 14px 14px darken($color-neutral-darker, 2%);
    border: solid 4px transparent;
    border-radius: 14px;
  }

  ::-webkit-scrollbar-button {
    display: none;
  }
}

@mixin buttonStyle($color) {
  @include hipsterBackground($color);
}

@mixin backgroundOverlay($color, $opacity: 0.6) {
  position: relative;

  &::after {
    display: block;
    content: ' ';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: $color;
    opacity: $opacity;
  }
}

@mixin hipsterBackground($color) {
  background-color: $color;
  background-image: linear-gradient(
    135deg,
    rgba(#fff, 0.12) 0%,
    rgba(#fff, 0) 50%,
    rgba(#000, 0) 51%,
    rgba(#000, 0.12) 100%
  );
  // background-image: url('assets/images/hipsterBackground.png');
  background-size: 100% 100%;
}

@mixin tiledBackground($color, $size: 480px) {
  background-color: $color;
  // background-image: url('assets/images/russia2018-texture.svg');
  background-repeat: repeat;
  background-size: $size auto;
}

@mixin fontTitle() {
  font-family: $title_fontFamily;
  font-weight: 300;
  letter-spacing: 0.05em;
}

@mixin coverRatio($originalRatio, $destRatio) {
  @if ($originalRatio > $destRatio) {
    $height: 100% / $destRatio;
    $originalWidth: $height * $originalRatio;
    $width: $height * $destRatio;
    width: auto;
    height: 100%;
    margin-left: 0.5 * ($width - $originalWidth);
  } @else {
    width: 100%;
    height: auto;
    margin-top: -0.5 * ((100% / $originalRatio) - (100% / $destRatio));
  }
}

// WIP: Implement Field component with style
@mixin inputStyle() {
  display: inline-flex;
  background: $color-white;
  color: $color-neutral-darker;
  min-height: 42px;
  border-radius: $global_borderRadius;
  border: 2px solid $color-neutral-light;
  font-size: 1em;
  padding: 0.1em 0.3em;
  transition: box-shadow 0.3s ease;
  box-shadow: none;
  align-items: center;

  &--isFocused,
  &:focus {
    border: 2px solid $color-primary-light;
    color: $color-primary-dark;
    box-shadow: inset 0 3px 6px 1px rgba($color-black, 0.2);
  }

  &--isDisabled,
  &:disabled {
    &,
    & > * {
      cursor: not-allowed;
    }
    background: darken($color-neutral-lighter, 5%);
    color: rgba($color-neutral-dark, 0.5);
  }

  > input {
    appearance: none;
    background: transparent;
    color: inherit;
    outline: none;
    border: none;
  }
}
