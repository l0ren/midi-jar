@import 'variables.scss';

$Button_fontFamily: inherit !default;
$Button_padding: 8px !default;
$Button_borderWidth: 0 !default;
$Button_borderRadius: 0 !default;
$Button_width: 42px !default;
$Button_height: 42px !default;
$Button_lineHeight: 20px !default;
$Button_transition: $transition_medium !default;
$Button-feedback_nopeAnimationAmplitude: 0.3em !default;
$Button-feedback_nopeAnimationDuration: 0.3s !default;
$Button-feedback_yupAnimationAmplitude: 0.2em !default;
$Button-feedback_yupAnimationDuration: 0.6s !default;
$Button_textShadow: none !default;
$Button_boxShadow: none !default;

$Button--icon_touchPadding: 0.5em !default;

@mixin _buttonVariant(
  $colorNormal,
  $colorHover: lighten($colorNormal, 10%),
  $colorActive: darken($colorNormal, 10%)
) {
  @if mixin-exists(buttonVariant) {
    @include buttonVariant($colorNormal, $hoverColor, $activeColor);
  } @else {
    @if ($colorNormal==transparent) {
      $colorHover: rgba($color-white, 0.2);
      $colorActive: rgba($color-white, 0.3);

      color: currentColor;
      background-color: $colorNormal;
      border-color: $colorNormal;
      background-image: none;

      &:hover,
      &:focus {
        background-color: $colorHover;
        border-color: $colorHover;
      }

      &:active {
        background-color: $colorActive;
        border-color: $colorActive;
      }

      &[disabled] {
        background-color: $colorNormal;
        border-color: $colorNormal;
      }
    } @else {
      @if mixin-exists(buttonStyle) {
        @include buttonStyle($colorNormal);
      }

      color: uxColorContrast($colorNormal);

      background-color: $colorNormal;
      border-color: $colorNormal;

      &:hover,
      &:focus {
        background-color: $colorHover;
        border-color: $colorHover;
      }

      &:active {
        background-color: $colorActive;
        border-color: $colorActive;
      }

      &[disabled] {
        background-color: $colorNormal;
        border-color: $colorNormal;
      }
    }
  }
}

@keyframes nopeAnimation {
  0% {
    left: 0;
  }

  25% {
    left: $Button-feedback_nopeAnimationAmplitude;
  }

  50% {
    left: -$Button-feedback_nopeAnimationAmplitude;
  }

  75% {
    left: $Button-feedback_nopeAnimationAmplitude * 0.6;
  }

  100% {
    left: 0;
  }
}

@keyframes yupAnimation {
  0% {
    top: 0;
  }

  25% {
    top: $Button-feedback_yupAnimationAmplitude;
  }

  50% {
    top: -$Button-feedback_yupAnimationAmplitude;
  }

  75% {
    top: $Button-feedback_yupAnimationAmplitude * 0.6;
  }

  100% {
    top: 0;
  }
}

.base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  cursor: pointer;
  min-width: $Button_width;
  max-width: 100%;
  text-align: center;
  transition: border-color $Button_transition, background $Button_transition,
    background-image $Button_transition, color $Button_transition,
    opacity $Button_transition;

  vertical-align: bottom;
  color: inherit;

  &:hover {
    color: inherit;
  }

  &--isPending,
  &--isError,
  &--isSuccess {
    .content {
      opacity: 0;
    }

    .feedback {
      opacity: 1;
    }
  }

  &--block {
    display: flex;
    width: 100%;
  }

  &--isSuccess {
    .feedback {
      animation: yupAnimation $Button-feedback_yupAnimationDuration ease 1;
    }
  }

  &--isError {
    .feedback {
      animation: nopeAnimation $Button-feedback_nopeAnimationDuration ease 1;
    }
  }
}

.content {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  opacity: 1;
  transition: transform $Button_transition, opacity $Button_transition;
  width: 100%;

  > span {
    overflow: hidden;
    text-overflow: ellipsis;
    flex-shrink: 1;
    flex-grow: 1;

    &.badge,
    &.icon {
      flex-grow: 0;
      flex-shrink: 0;
    }
  }
}

.feedback {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  opacity: 0;
  transition: transform $Button_transition, opacity $Button_transition;
}

.disabledMessage {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  opacity: 0;
  transition: transform $Button_transition, opacity $Button_transition;
}

.badge,
.icon {
  font-size: 1.2em;
  vertical-align: middle;
  line-height: 1;
}

// VARIANT base--withDisabledMessage
.base--disabled.base--withDisabledMessage {
  .content {
    transform: translateY(-100%);
    opacity: 0;
  }

  .disabledMessage {
    transform: translateY(0);
    opacity: 1;
  }
}

// MAIN VARIANTS
.base--classic {
  overflow: hidden;
  font-family: $body_fontFamily;
  font-size: $body_fontSize;
  text-shadow: $Button_textShadow;
  box-shadow: $Button_boxShadow;
  padding: $Button_padding;
  border: $Button_borderWidth solid transparent;
  border-radius: $Button_borderRadius;
  min-height: $Button_height;
  line-height: $Button_lineHeight;
  text-transform: uppercase;
  outline: 0;

  .content > * {
    margin: auto 4px;
  }

  .feedback {
    transform: translateY(100%);
  }

  .disabledMessage {
    transform: translateY(100%);
  }

  &.base--isPending,
  &.base--isError,
  &.base--isSuccess {
    .disabledMessage {
      opacity: 0;
    }

    .content {
      transform: translateY(-100%);
      opacity: 0;
    }

    .feedback {
      transform: translateY(0);
      opacity: 1;
    }
  }
}

// a button with only an icon
.base--icon {
  border: none;
  background: transparent;
  font-size: 1em;
  min-width: 0;

  .content {
    transform: scale(1);
  }

  .feedback {
    transform: scale(0);
  }

  &.base--isPending,
  &.base--isError,
  &.base--isSuccess {
    .content {
      transform: scale(0);
      opacity: 0;
    }

    .feedback {
      transform: scale(1);
      opacity: 1;
    }
  }
}

// VARIANTS for CLASSIC buttons states
.base.base--classic.base.base--isPending,
.base.base--classic.base.base--hoverVariant.base--isPending {
  @include _buttonVariant($color-primary-normal);
}

.base.base--classic.base.base--isSuccess,
.base.base--classic.base.base--hoverVariant.base--isSuccess {
  @include _buttonVariant($color-success-normal);
}

.base.base--classic.base.base--isError,
.base.base--classic.base.base--hoverVariant.base--isError {
  @include _buttonVariant($color-danger-normal);
}

// VARIANTS for CLASSIC buttons
.base--classic {
  @include _buttonVariant($color-neutral-dark);
}

.base--classic.base--primary {
  @include _buttonVariant($color-primary-normal);
}

.base--classic.base--secondary,
.base--classic.base--secondary.base--hoverVariant.base--isActive {
  @include _buttonVariant($color-secondary-normal);
}

.base--classic.base--submit,
.base--classic.base--success,
.base--classic.base--success.base--isActive,
.base--classic.base--success.base--hoverVariant.base--isActive {
  @include _buttonVariant($color-success-normal);
}

.base--classic.base--warning,
.base--classic.base--warning.base--isActive,
.base--classic.base--warning.base--hoverVariant.base--isActive {
  @include _buttonVariant($color-warning-normal);
}

.base--classic.base--danger,
.base--classic.base--danger.base--isActive,
.base--classic.base--danger.base--hoverVariant.base--isActive {
  @include _buttonVariant($color-danger-normal);
}

.base--classic.base--transparent {
  @include _buttonVariant(transparent);
}

.base--classic {
  &.base--isInactive {
    @include _buttonVariant($color-neutral-dark);
  }
  &.base--isActive {
    @include _buttonVariant($color-primary-normal);
  }
}

.base--classic.base--disabled {
  @include _buttonVariant($color-neutral-light);
  opacity: 0.8;
  cursor: not-allowed;
}

// VARIANTS for CLASSIC buttons with hoverVariant
.base--classic.base--hoverVariant.base--primary {
  @include _buttonVariant(
    $color-neutral-dark,
    $color-primary-normal,
    darken($color-primary-normal, 10%)
  );
}

.base--classic.base--hoverVariant.base--secondary {
  @include _buttonVariant(
    $color-neutral-dark,
    $color-secondary-normal,
    darken($color-secondary-normal, 10%)
  );
}

.base--classic.base--hoverVariant.base--submit,
.base--classic.base--hoverVariant.base--success {
  @include _buttonVariant(
    $color-neutral-dark,
    $color-success-normal,
    darken($color-success-normal, 10%)
  );
}

.base--classic.base--hoverVariant.base--warning {
  @include _buttonVariant(
    $color-neutral-dark,
    $color-warning-normal,
    darken($color-warning-normal, 10%)
  );
}

.base--classic.base--hoverVariant.base--danger {
  @include _buttonVariant(
    $color-neutral-dark,
    $color-danger-normal,
    darken($color-danger-normal, 10%)
  );
}

// VARIANTS FOR TOGGLE buttons
.base--classic.base--toggle {
  @include _buttonVariant($color-neutral-dark);
}

// VARIANTS for ICON buttons

.base--icon {
  color: currentColor;
}

.base--icon.base--primary,
.base--icon.base.base--isPending {
  color: $color-primary-normal;
}

.base--icon.base--secondary {
  color: $color-secondary-normal;
}

.base--icon.base--submit,
.base--icon.base--success,
.base--icon.base.base--isSuccess {
  color: $color-success-normal;
}

.base--icon.base--warning {
  color: $color-warning-normal;
}

.base--icon.base--danger,
.base--icon.base.base--isError {
  color: $color-danger-normal;
}

.base--icon.base--isInactive {
  color: currentColor;
  opacity: 0.5;
}

.base--icon.base--disabled {
  color: $color-neutral-normal;
  opacity: 0.5;
  cursor: not-allowed;
}
